<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Classy Stopwatch</title>
<style>
  body {
    font-family: 'Segoe UI', Tahoma, sans-serif;
    background: #121212;
    color: #fff ;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    margin: 0;
  }
  h1 {
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 2rem;
    letter-spacing: 1px;
    text-align: center;
  }
  .stopwatch-container {
    background: #2c2c2c;
    border-radius: 20px;
    padding: 1rem;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.7), 0 4px 20px rgba(0,0,0,0.4);
    width: 250px;
  }
  .top-bar {
    display: flex;
    justify-content: space-between;
    font-size: 0.8rem;
    margin-bottom: 0.5rem;
  }
  .stopwatch-display {
    font-size: 2.5rem;
    font-weight: bold;
    text-align: center;
    padding: 0.5rem 0;
  }
  .controls {
    display: flex;
    justify-content: space-around;
    margin-top: 1rem;
  }
  .btn {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    cursor: pointer;
    transition: transform 0.1s ease-in-out;
  }
  .btn:active {
    transform: scale(0.9);
  }
  .btn-start { background: #4caf50; color: white; }
  .btn-pause { background: #2196f3; color: white; }
  .btn-stop { background: #f44336; color: white; }
  .btn-reset { background: #ff9800; color: white; }
  .btn-share { background: #9c27b0; color: white; }
  footer {
    margin-top: 1.5rem;
    font-size: 0.8rem;
    color: #aaa;
    text-align: center;
  }
</style>
</head>
<body>
  <h1>"Time is what we want most, but what we use worst."</h1>
  <div class="stopwatch-container">
    <div class="top-bar">
      <span id="timeNow"></span>
      <span>+16</span>
    </div>
    <div class="stopwatch-display" id="display">00:00:00</div>
    <div class="controls">
      <button class="btn btn-start" id="startBtn">▶</button>
      <button class="btn btn-pause" id="pauseBtn">⏸</button>
      <button class="btn btn-stop" id="stopBtn">■</button>
      <button class="btn btn-reset" id="resetBtn">↺</button>
      <button class="btn btn-share" id="shareBtn">⇪</button>
    </div>
  </div>
  <footer>Ansh</footer>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
  <script>
    let timer;
    let isRunning = false;
    let seconds = 0, minutes = 0, hours = 0;

    const display = document.getElementById('display');
    const startBtn = document.getElementById('startBtn');
    const pauseBtn = document.getElementById('pauseBtn');
    const stopBtn = document.getElementById('stopBtn');
    const resetBtn = document.getElementById('resetBtn');
    const shareBtn = document.getElementById('shareBtn');
    const timeNow = document.getElementById('timeNow');

    function updateClock() {
      const now = new Date();
      let hours = now.getHours();
      let minutes = now.getMinutes();
      const ampm = hours >= 12 ? 'PM' : 'AM';
      hours = hours % 12;
      hours = hours ? hours : 12;
      minutes = minutes < 10 ? '0' + minutes : minutes;
      timeNow.textContent = `${hours}:${minutes} ${ampm}`;
    }
    setInterval(updateClock, 1000);
    updateClock();

    function updateDisplay() {
      let h = hours < 10 ? '0' + hours : hours;
      let m = minutes < 10 ? '0' + minutes : minutes;
      let s = seconds < 10 ? '0' + seconds : seconds;
      display.textContent = `${h}:${m}:${s}`;
    }

    function startTimer() {
      if (!isRunning) {
        isRunning = true;
        timer = setInterval(() => {
          seconds++;
          if (seconds === 60) {
            seconds = 0;
            minutes++;
            if (minutes === 60) {
              minutes = 0;
              hours++;
            }
          }
          updateDisplay();
        }, 1000);
      }
    }

    function pauseTimer() {
      isRunning = false;
      clearInterval(timer);
    }

    function stopTimer() {
      isRunning = false;
      clearInterval(timer);
      seconds = 0;
      minutes = 0;
      hours = 0;
      updateDisplay();
    }

    function resetTimer() {
      seconds = 0;
      minutes = 0;
      hours = 0;
      updateDisplay();
    }

    function shareScreenshot() {
      html2canvas(document.querySelector('.stopwatch-container')).then(canvas => {
        const link = document.createElement('a');
        link.download = 'stopwatch.png';
        link.href = canvas.toDataURL();
        link.click();
      });
    }

    startBtn.addEventListener('click', startTimer);
    pauseBtn.addEventListener('click', pauseTimer);
    stopBtn.addEventListener('click', stopTimer);
    resetBtn.addEventListener('click', resetTimer);
    shareBtn.addEventListener('click', shareScreenshot);

    updateDisplay();
  </script>
</body>
</html>
